---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRRm1ocUw3RHVrOHVrTkhTaWYycUVzVEFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl5TURJeU1UQXlNek0wTWxvWApEVEkxTURJeU1EQXlNek0wTWxvd0hqRWNNQm9HQTFVRUF4TVRhSFZpWW14bExXTmhMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBS1ZSWFF3TXNiclhkT3RkZEk4RWphQkcKMGQxU1RRWkVLVmlKVFJ3YVowczlvVkpxc0FLRVZoVWQ2L2VGdEFNOHRwdmxFUnJ2L1J6WFd0bVRkM253L21qdQpCSmdoczd0NkxCUDNNS0l6VlprWTFxUm1Ud2YrZHdnZlpzSUthL25Tcy9TN2pTeWlReTNuUkd2TWFab3UreldFCitoNnRYYmNGUW9uT295Kzg4SGJHbVBNaG1RWVBxenVEaUxIUGQxMjQ2bUYxd05KUVowUHdQNHI5aXZ5dGdHSmUKcnVVYmUvaTcwNVFUTzFZQzZubll5M2xmb01NQVJuS1VndkcyUGpyc1NRdEFRVjk1SmRKZ2ZMdWp0ekNsU3p2dgpVb2QyMXlwa2ViUFJEdzdSS0ZsVWhxcGh5Qk9hc3JWWWRWSDlFaUtac0tyOWlRQmRSTFUvZk91Yk1lUVQyY2NDCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRnUHhrbnlweEdadkZPbjJHRApwNUV6T1drMTN6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFJbjlEOUduM2FTazBGYzhaZFJmeVFWUTA2MlU2Cm5JTG1lN2RDeCtWeWt4WFVXNzMyUlBXRHlBQ0MxT0VvaWNjL05yOGV6ejFnNGphckVXUCtvTTZ3T1phZTE3bFYKZGR1WDV3aVVBT0NXdGZKeDZxUkhJNVRvdkkrMGVLUUt3NGN6b1pRM1VrckhZa0dyTXpqQnNseUVuL20zcjh1ZgpPM0RiclpMVU1kUmxNRXZEZlZ5ZXpwSUVRaDVtalZWajlRKzNuR3EySzEwZVc5eEV0RVZKV25LR0QxbEozUUhGCi9pbm14a3NBQXRCNWlIRFJMY2VEcFM2SWMySVVVdUpxRnN0WGdKcnB3S2ZKU3lwZXJEZWF4L3FtaDhld2RXQloKdmRrTkZzaFZvaDVmaTIxOGdJNTRKa1VCWTB1ZStmMng1ZGtVM2xvSE9NRE1kei9XYnRwU1IvT0kxZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcFZGZERBeXh1dGQwNjExMGp3U05vRWJSM1ZKTkJrUXBXSWxOSEJwblN6MmhVbXF3CkFvUldGUjNyOTRXMEF6eTJtK1VSR3UvOUhOZGEyWk4zZWZEK2FPNEVtQ0d6dTNvc0UvY3dvak5WbVJqV3BHWlAKQi81M0NCOW13Z3ByK2RLejlMdU5MS0pETGVkRWE4eHBtaTc3TllUNkhxMWR0d1ZDaWM2akw3endkc2FZOHlHWgpCZytyTzRPSXNjOTNYYmpxWVhYQTBsQm5RL0EvaXYySy9LMkFZbDZ1NVJ0NytMdlRsQk03VmdMcWVkakxlVitnCnd3QkdjcFNDOGJZK091eEpDMEJCWDNrbDBtQjh1Nk8zTUtWTE8rOVNoM2JYS21SNXM5RVBEdEVvV1ZTR3FtSEkKRTVxeXRWaDFVZjBTSXBtd3F2MkpBRjFFdFQ5ODY1c3g1QlBaeHdJREFRQUJBb0lCQUF5T201UzR1aDlKRWxaMgphTTRjT0cyK00xNnVTNjk0S2ZQUnFndkNiYW9uYWtPS1d3ZzE2UnY5ZzlqdlRQY1orM3puNzE2dWIvbHEyam5BCm04aWxaNDJzMXFoL2x0bGN0RkJuN0VmRnduQzRsRVUwaURoQk9lVmlEVG9iOUl1clY0UDFZd25LNFhOeEo1OVEKall6cW1LWStEWW1hL1kxVFZ2U0V2NXgycTRVNS9VcFM4YnJIcHlCWHE2UkZuVm5pOXc1OG1pWlRTSlhuWE55YwpYVGlzQVhaN3d4RDZYWk16UGFqMUcyMnpkVC9tZzNHUkppZkRWZTVDVzZOWWZ0MGFqQVUyYWxIWjF5dWhBWkpqCmx3V01FYXlGRXcyazdYVEt0bHZtOTgyN1ZERzlnZTA0WWNUb05ZSGNmVDJaRURLVEs3WGptTThYdEtJRDVFV2kKczBxZFcxRUNnWUVBeG0rWEVKSDFOajRYb0hEblNLY3I0MmVzSUFWQjh1MXpxcnAvdjRLNVpxY29WZno4OGhFRQpldGJvUGtleDJTbFczQVBEM3pTdTJHUGZ6Sm1hR1pHcUpqcEwycnhDZUE0SWpMZXJJblRZMkZCZUxOd2NvTGNqCkx0U2x0eFM4WitzMUwxWVBGcnVmSTJOMlMrV3J1ZHZxTHhxRFZIR3ptbTRVR1BJaW9LZDNQVVVDZ1lFQTFVWlUKOGErVmVUVUdGWUw1L3M4NElCbVdLMHV5ZFJsL2EvdTZzVElaYmRiclpCUmdCdjhGa3J6UjVmbXpXSVY5SXBLdgpha3BCZ09aNXlIWWkwVjhIYzhZSHFJMW1qamZ3MFVzd0p0UWVYQTUvbE5EbEFjM2NCc0J6ZFZ0U1F1VWpYcGd3Cm1RRVN5SUNVSkpXbUd4ankzQjk2WUFkSVJ5UjdNSGc4OTlEa1Rac0NnWUIrY1Z5eEVsQk40QUx1R1FOSEtENnYKQ01DRkp0Ui9Gdzg5R3RtTURxQlU2TzZxM0NuUmxVWmxmOHM4NURKUFRpZ3F5YnRsM3d3S2xwbGtwZnVyajBYOApWZWsvMS9ZQ3llNW92Q0F3TklSNFViMndtQkVsMTR4enFzeHRmS2tSRHE4MUdvRkMyd3JzWWRSZlNGbkVkSDBrCnhxQW9qc3NDL0dHU0E3aE01bWowZ1FLQmdRQysrZnpFY3VNWkp6YnNlbDFjSTdoeFhoZ1BhdmhCVFhUQmdDZDcKMW8zWXdwUUVDUTY0RlJLcmhETThpTzFrL2h2QW9yTTdMWVVjWk1WMmtQcTZteXEwTEFiZGtzamIzeEhnaUVCMAo5SXEvQ2lpS1hNaEVaazk1S0VuN002d2t4TVI0UnpWMVBQWFIzdmxKRFV3eGhaU3JNZkRHSHA5RlBWQ21aWFRLCndCNC9zd0tCZ1FERWpmMG9uWVBCckNneFFjS3lBcDZtV3VMTzExRURJY0FkWXpuUVg0d1RpcUZHemYvcHFLNzMKQ2VRSHliOG9LSHhVZHZmaitpcjdxaytHTjJWYmg0Mm9NV284K28wV0tPdWNRekowN2lmMlZ5UUtic1k5N1BDTApkeVNWQ2FpQjJqNEMrVWtKRE5qME91a29GYXEySlNsWTI3eGhmaU96eUpyTklvTWM5d3hzZWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRRm1ocUw3RHVrOHVrTkhTaWYycUVzVEFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl5TURJeU1UQXlNek0wTWxvWApEVEkxTURJeU1EQXlNek0wTWxvd0hqRWNNQm9HQTFVRUF4TVRhSFZpWW14bExXTmhMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBS1ZSWFF3TXNiclhkT3RkZEk4RWphQkcKMGQxU1RRWkVLVmlKVFJ3YVowczlvVkpxc0FLRVZoVWQ2L2VGdEFNOHRwdmxFUnJ2L1J6WFd0bVRkM253L21qdQpCSmdoczd0NkxCUDNNS0l6VlprWTFxUm1Ud2YrZHdnZlpzSUthL25Tcy9TN2pTeWlReTNuUkd2TWFab3UreldFCitoNnRYYmNGUW9uT295Kzg4SGJHbVBNaG1RWVBxenVEaUxIUGQxMjQ2bUYxd05KUVowUHdQNHI5aXZ5dGdHSmUKcnVVYmUvaTcwNVFUTzFZQzZubll5M2xmb01NQVJuS1VndkcyUGpyc1NRdEFRVjk1SmRKZ2ZMdWp0ekNsU3p2dgpVb2QyMXlwa2ViUFJEdzdSS0ZsVWhxcGh5Qk9hc3JWWWRWSDlFaUtac0tyOWlRQmRSTFUvZk91Yk1lUVQyY2NDCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRnUHhrbnlweEdadkZPbjJHRApwNUV6T1drMTN6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFJbjlEOUduM2FTazBGYzhaZFJmeVFWUTA2MlU2Cm5JTG1lN2RDeCtWeWt4WFVXNzMyUlBXRHlBQ0MxT0VvaWNjL05yOGV6ejFnNGphckVXUCtvTTZ3T1phZTE3bFYKZGR1WDV3aVVBT0NXdGZKeDZxUkhJNVRvdkkrMGVLUUt3NGN6b1pRM1VrckhZa0dyTXpqQnNseUVuL20zcjh1ZgpPM0RiclpMVU1kUmxNRXZEZlZ5ZXpwSUVRaDVtalZWajlRKzNuR3EySzEwZVc5eEV0RVZKV25LR0QxbEozUUhGCi9pbm14a3NBQXRCNWlIRFJMY2VEcFM2SWMySVVVdUpxRnN0WGdKcnB3S2ZKU3lwZXJEZWF4L3FtaDhld2RXQloKdmRrTkZzaFZvaDVmaTIxOGdJNTRKa1VCWTB1ZStmMng1ZGtVM2xvSE9NRE1kei9XYnRwU1IvT0kxZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVekNDQWp1Z0F3SUJBZ0lSQVBiNURueENUbmJjUU5IbkdwZTBNYWd3RFFZSktvWklodmNOQVFFTEJRQXcKSGpFY01Cb0dBMVVFQXhNVGFIVmlZbXhsTFdOaExtTnBiR2wxYlM1cGJ6QWVGdzB5TWpBeU1qRXdNak16TkRKYQpGdzB5TlRBeU1qQXdNak16TkRKYU1DTXhJVEFmQmdOVkJBTU1HQ291YUhWaVlteGxMWEpsYkdGNUxtTnBiR2wxCmJTNXBiekNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFLbDBzMTdET1R3TzFmNjUKdHN6b013MGhIV0F0U0hEdSsyMnQrdHllbVh3Ny91ZG5MZ2JrMXJ1Qmo1SnM4OURMTCtwakRPaXVIWGo3ZmpZdgpDaHdWeGRrdHhwSWNHMW9iSzhqUVVFUTJja3p3L0w5VGJZWlpIM3FuandncWQxRWcraWg5V3h1TW1BcEN3WXZUCjVDbXVRRk4rdkFzRzdvMFdySTFjQ05KSTVDRGx4OEpyRndWVVRsZThpdWVydUlOcERSSEJwQm12OUVXWlY0aTUKRWU3WmxlNk1TS1JIZno5M2ZJR1psMWE5c1FNUUphbmd4aDkrRVNLMUpFUHJWdDl3dlMxcnJMQXk4alB1NnU3YQp0L1o3UHBaUUtKRy9pdFNiVDQ4L0ZhcHpzTzE4RXlsWGNqanl6b01LOVBCMlltSVphSTlLUHhYQXcvYW02aHc5ClhnOEZiUThDQXdFQUFhT0JoakNCZ3pBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUIKQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVU0RDhaSjhxYwpSbWJ4VHA5aGc2ZVJNemxwTmQ4d0l3WURWUjBSQkJ3d0dvSVlLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0CkxtbHZNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNKaXhkcU05cmZXcmtwblZjaEt1dG9ZNmhVb0JGSkVKMWoKUlJRaExHNVcyN2c3b2tYc0w2NUVIdi9NRlNVdGVTWG5yVy9YZWxXVVRnQkhyeTZjOHBma29iNklWT0ZjVjc0TApvQkYyd3ZRZ2xONE9NaFVManBtTmY4R0lvVVNzSFlYOHN0czhlVEJTWk9aTFBxcGFqcmZlS0FDZ2ZRRUlBOWdJCjFYaHNJa0M2STdodEtLbGwweU44elRGSVBBaGRCemgwcnJnRHFuNk1rZStwNWdvM1JZYkxQZzNpbVlDdnZNZGkKc2tRNE05UlAybzdLNEZXRXVDVnNNcW1zYXBCOVBzOFI1Tk8rdk1PN21sNkpWc3RQM0hzMHhwRGlEZnFwaW1lMwozcmYwR3NkOW83clM1d255ZUNZWlpNS2U5c2x1REM0VWthT0JHdUlGdVRkcEFRbDFuV0tXCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcVhTelhzTTVQQTdWL3JtMnpPZ3pEU0VkWUMxSWNPNzdiYTM2M0o2WmZEdis1MmN1CkJ1VFd1NEdQa216ejBNc3Y2bU1NNks0ZGVQdCtOaThLSEJYRjJTM0draHdiV2hzcnlOQlFSRFp5VFBEOHYxTnQKaGxrZmVxZVBDQ3AzVVNENktIMWJHNHlZQ2tMQmk5UGtLYTVBVTM2OEN3YnVqUmFzalZ3STBramtJT1hId21zWApCVlJPVjd5SzU2dTRnMmtORWNHa0dhLzBSWmxYaUxrUjd0bVY3b3hJcEVkL1AzZDhnWm1YVnIyeEF4QWxxZURHCkgzNFJJclVrUSt0VzMzQzlMV3Vzc0RMeU0rN3E3dHEzOW5zK2xsQW9rYitLMUp0UGp6OFZxbk93N1h3VEtWZHkKT1BMT2d3cjA4SFppWWhsb2owby9GY0REOXFicUhEMWVEd1Z0RHdJREFRQUJBb0lCQUNGV09SZHlkcWNQRUNCdApycjIvREpRUHFMVE1FODFMNXFEY01sY0d5SkU5U0ZlRDMvVXhQZUZqaXJnMndQeVpqSktpNjk0MnFzdXJSbGdvCmh1ZWhqT3U5NnF2QjVjdWpQc2poMm5pZzhYbWJpMDJrZnc2SUovNDhTcEpEc0hlQWNsWlcydjZmZVNYRG5rb0EKNUlraW83c0pXcnNjb1ArV3IxbWIrb3hNRkwwM3hVV1drRTJ1TWJCQmRIOXJ6ZkJjOFJrTGJUOHREWUloMWFEUAphN2xBMDA3NCs5cGRmc3V6VHl6K2E4Z2J2QjE4OXU1NUxnVmZjbzNsSGdMdzJwK0l2aXV2RkRjanJCNWFDa2VhCllMSWRKYU41VS9yV1pKbEh6YncvbVlncTNyYXFadUdlTnFwU0RDVFIzTFIxcE5xUHN3ektUZzBOM0h1SFJLL1EKVzJEbHFaRUNnWUVBMTdDZzJJUjJhcTdVcVhrRHdaV3dYOGhGUzd5dGd6enkxTi9WUU5rU1FSMFJiZGRLdkpobQo3OWh3ckZWUTdiZ3I5KytGRTlaQ0tDTnozYjlRL2g5K0krZGZGV3pwU1NTWURIN1l3MjZMbk9CU2lNOXhSblNCCmwwQ0xwSDlFSnJhN0x2VkllYnFlOXZyL0JkWlVtSy9uQUhsZW5xcS83T1UzWmhWMkd3clB6c2NDZ1lFQXlTQVIKem03SnhLTGQ1ZWI1MHBiYTIvenVjMGFXSW9BczF0WFNqUzlYaUVuUjJKd1RaSWhUYlJCMUZzdjdtYi82b0l1RQpMQ1pNYVdXM2srb2JyUDF2QURLQmxUYWZPOFlDU25DaFJZMXdjTlZuTlRXNFA1T29aeWZ2bHVZeTZ2QzlaK0xkCjBuV0pnTFIydWtKenVlMHllVStJNHlCSnN6TnUvc1hqa241d3gza0NnWUVBaFZ6VzkwbGdGcktuRjJxVjRmcDIKSmFNbEJhRlIvOVdOcUFZR1M2UnNYd3BrSG5DQjYzNm9GeURTK2h0K2dKM2h3ZG05aFBoenkzR3dVS25jb0dSRQprRnFkTmhnelhtQmNDMDNiSld1U3M1c1lMVE5tck5PWTFUYTVvU3AzcnlCSk9NMjgxRmVKdHRpWEdycmRiOU5ECmw4MXpyZE9SL0IzMlZRNXNDbWh5K1QwQ2dZQkpEZ0lKeHNvNVI2TnNSOHJFeUpEMHlWbmZ1MnI3V3kxdVY3cWsKRitjbWxSSEpLV0FONjByS1dlajkvOWdERCsyOGRSRHNiSGppNjlTVHdMeU95SHVTU2NZeDZlWks4dkNRRTNzdwo1V0JMUytpeU5qSVh2YzIwc3BmZmF2eGh4Rkk0TXZxNTRJR3lvMXBnNjVSWG02WHkxSVgzWWhvRElwS1ZybEdzCk80dEJtUUtCZ1FDVHBRNTQvd1gwSmVpbzhURGpnUVFOeTl0bkp4aEZCRVcwdTk4RGpiTVI1azUzWVR4ZXhJYisKaXhKVDZzMitESGVld3M2dWVUME5sRmUyYlBBSmFFbFNOYklickhGamZ4MGpnYjZVVEdEcHk2ZWZWQ0I3REo1YQpMcUtsZjYwaFVKTTdDZ2xGRGEyNzIwMTFDdTIrZEJadGt4a3FQVmJ6cUhvNW1Ec0hUSWFNVnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRRm1ocUw3RHVrOHVrTkhTaWYycUVzVEFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl5TURJeU1UQXlNek0wTWxvWApEVEkxTURJeU1EQXlNek0wTWxvd0hqRWNNQm9HQTFVRUF4TVRhSFZpWW14bExXTmhMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBS1ZSWFF3TXNiclhkT3RkZEk4RWphQkcKMGQxU1RRWkVLVmlKVFJ3YVowczlvVkpxc0FLRVZoVWQ2L2VGdEFNOHRwdmxFUnJ2L1J6WFd0bVRkM253L21qdQpCSmdoczd0NkxCUDNNS0l6VlprWTFxUm1Ud2YrZHdnZlpzSUthL25Tcy9TN2pTeWlReTNuUkd2TWFab3UreldFCitoNnRYYmNGUW9uT295Kzg4SGJHbVBNaG1RWVBxenVEaUxIUGQxMjQ2bUYxd05KUVowUHdQNHI5aXZ5dGdHSmUKcnVVYmUvaTcwNVFUTzFZQzZubll5M2xmb01NQVJuS1VndkcyUGpyc1NRdEFRVjk1SmRKZ2ZMdWp0ekNsU3p2dgpVb2QyMXlwa2ViUFJEdzdSS0ZsVWhxcGh5Qk9hc3JWWWRWSDlFaUtac0tyOWlRQmRSTFUvZk91Yk1lUVQyY2NDCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRnUHhrbnlweEdadkZPbjJHRApwNUV6T1drMTN6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFJbjlEOUduM2FTazBGYzhaZFJmeVFWUTA2MlU2Cm5JTG1lN2RDeCtWeWt4WFVXNzMyUlBXRHlBQ0MxT0VvaWNjL05yOGV6ejFnNGphckVXUCtvTTZ3T1phZTE3bFYKZGR1WDV3aVVBT0NXdGZKeDZxUkhJNVRvdkkrMGVLUUt3NGN6b1pRM1VrckhZa0dyTXpqQnNseUVuL20zcjh1ZgpPM0RiclpMVU1kUmxNRXZEZlZ5ZXpwSUVRaDVtalZWajlRKzNuR3EySzEwZVc5eEV0RVZKV25LR0QxbEozUUhGCi9pbm14a3NBQXRCNWlIRFJMY2VEcFM2SWMySVVVdUpxRnN0WGdKcnB3S2ZKU3lwZXJEZWF4L3FtaDhld2RXQloKdmRrTkZzaFZvaDVmaTIxOGdJNTRKa1VCWTB1ZStmMng1ZGtVM2xvSE9NRE1kei9XYnRwU1IvT0kxZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZVENDQWttZ0F3SUJBZ0lSQVBqRXdSZlBmcnY4VDNqWU9FVWE0OW93RFFZSktvWklodmNOQVFFTEJRQXcKSGpFY01Cb0dBMVVFQXhNVGFIVmlZbXhsTFdOaExtTnBiR2wxYlM1cGJ6QWVGdzB5TWpBeU1qRXdNak16TkRKYQpGdzB5TlRBeU1qQXdNak16TkRKYU1Db3hLREFtQmdOVkJBTU1IeW91WkdWbVlYVnNkQzVvZFdKaWJHVXRaM0p3Cll5NWphV3hwZFcwdWFXOHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEb2hmdlUKQnJOb0UrbzdMZ0FCM1VFbzRLOExPQnd2MUErZmRHUXhQcG5JYTZhK2wzN3ZMK3hjVjhzZnZxSzZLZ2RpbDgwOQpxa01yM3orRTVQeFh1ZTEyVWVWU3hyVWlNb2tHdjM4b3RZZ2w1WDJqYVJoTDNWbFhYUVRIRzVMcWpndnpyU1hqCmQyS0p6RHFWRHRGbUZwc2loNldVcjVIY1pWVG1jVk92eHRZUHVoZWcyZFZOcGpSdS9qdmE1SXZHeHVNTE51NSsKUWNYZVA0OGNKWHZRSldiTmNPQ1czNzFjMXJxbG9LVzJkUTdDVVJDQVJoVG1aWSt3K0FVSXVlS0x4YUplTnlLRApOL2ZpdlVyenBSL1pJa25KRTdNOExXZjhCOFROZ1ZEZzhXRUZFQTQxMm9wMXoyMkNKZDdSWERSVndmOWJuR2M0CmpjN252VkVBQ3A4eFNKcUZBZ01CQUFHamdZMHdnWW93RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVcKTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQQpGT0EvR1NmS25FWm04VTZmWVlPbmtUTTVhVFhmTUNvR0ExVWRFUVFqTUNHQ0h5b3VaR1ZtWVhWc2RDNW9kV0ppCmJHVXRaM0p3WXk1amFXeHBkVzB1YVc4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFHeHYwdzJycTZCVHBpWkoKSWR4TmpTMkpaaWFiWGtFb3B4M2E1R1RBY0Y3YlZJVDJvL2NRWlRSVU1kZm1rOGJqZFpPK1JxYUttZzNhZlhNSwpCa215eG1rUXdmdUNUUGFjNzNqWThQMWo2YUU4c2xKR1RjcWFYYnZZRVlWd0xVUVovVXZpN1NLUE81VzZsajlDClNtZ1lRR1VsSzhOMGFKOGxwT1p6WWV0cGF4K0JiVUFsQ0Q3bEpUZkh3dHR3eVoxSVZjdC9SZXhDY2pNNFdPMWsKVXBYM0VsQzBKcU1ZL3J1UUxxUlNWVU5MemxqemhWK2RCcVJKeElGanFDVUxMUWZ0VVZ0NzJocURzVXluOWhNVAo1Q0hSQ3UrQ3hDSy9ZaFU1UDJmZ3ZBNWdFSVE4YWRyYi8rak9HcFY2UXU2OHczQnpnWkFnUms3eTltSWs5aXRaCkM2aXAwanc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBNklYNzFBYXphQlBxT3k0QUFkMUJLT0N2Q3pnY0w5UVBuM1JrTVQ2WnlHdW12cGQrCjd5L3NYRmZMSDc2aXVpb0hZcGZOUGFwREs5OC9oT1Q4VjdudGRsSGxVc2ExSWpLSkJyOS9LTFdJSmVWOW8ya1kKUzkxWlYxMEV4eHVTNm80TDg2MGw0M2RpaWN3NmxRN1JaaGFiSW9lbGxLK1IzR1ZVNW5GVHI4YldEN29Yb05uVgpUYVkwYnY0NzJ1U0x4c2JqQ3pidWZrSEYzaitQSENWNzBDVm16WERnbHQrOVhOYTZwYUNsdG5VT3dsRVFnRVlVCjVtV1BzUGdGQ0xuaWk4V2lYamNpZ3pmMzRyMUs4NlVmMlNKSnlST3pQQzFuL0FmRXpZRlE0UEZoQlJBT05kcUsKZGM5dGdpWGUwVncwVmNIL1c1eG5PSTNPNTcxUkFBcWZNVWlhaFFJREFRQUJBb0lCQUhkTEhocjJZUjdaY01keAozekVWcVhObWFvZlAvcTRQRndEUXZ3S0F3bmNQdTlsMmNmb1cxU1cvS1FnZFR2RkIxTTRoWVh2c21VK3QxckhBCnBUSUF3cko4YTdIZkhsandJbHJpN2tNZGR6OHlFUlpBT2VYYUp4YnFNeVJQb2oxU0tSR1lXS0x0d2hFK1JTUHEKR1VaTi9NTm5ZbXo0OGxWbmEzcGEwL3VQZ0kxS0NwRFMydVVmeGpsNXQxVE1CMW1vTTE3QTd4TlRCOG44cUxVagpMR3phanNsZHI5NmtybXd2OW14Rm9FS21Jcmx5M0grYUgrRnQ3ZjNHcFRVNklkQ0VnVi9QdzlIYlYzNEhsSzRMCndTaHU0QmxaOFp3WHJDMlVjeSt5NHpSenJjTUFZcFBPS1h4T1ozTUd5V0lkMGRFYzNUemtGeGR3OGhROEJZNjIKTHFVYzhSVUNnWUVBL0E5Z1dkQUhqRG1Gb25EM0ovdDJLaFllZGlYR2NZMzRMaFN3Vytrc2dlM3JnVjR6dWtsdgpwZ3QzazIwbUhJNXo5S0xCalNkd2Njb2hIT0pDOExpVzlPMlNiQnRGcUFRLzZQdVZWOHA3Vm9PNnJTZ3BxNUJnCnB4bE5iK3lhNW50NzVkTGMvNUp4RmlMNEhEWUY4QmtsdnIvZHlMcVRXYnl0bHNUbnZwR3c4UHNDZ1lFQTdDaHUKVEwvZ3ZDSGpoWmRQaGY5NU9HUDVPMWxtK0JaSjF6S0ptZjljQjJjSFJ3V25yOVd3aUx2M0twS0pCWWVZb1dLMwpqZlJncXFrelhKeko1YVU4N25ITXRmZWlORVFnVmhKSHg1bFdnWXlGaFBDTUZTQ2RHUmE3bExNRkJFQlZJRUxpCmhORDlVK0doNWdUOEtqaUdMMC9GY1BVUzNScHlnTnJzRS9RaHluOENnWUJUNFFZT1BUVVZ5OXFWcVFRR2tSN00KZUpuZ2RVZXBhRFlybDRUc3dSYW5rallwMGVCaTRLYy8yVmNNZjJrTVhiZG10SGEyYzJadTUzWEhkK0FRM1V5Vwo2eXdydjVPWml2aDlucU1mR09tY2E2L0dpYlA4UE1wOU1PVmRGcDZoam53M2lja3pYMWMwcDZSck51c1k4RFZvCldjOERTbHRZcEhvYnp5RFRnUVloMndLQmdGK2UzMHBrUnZMbUplSHBxbUZ2Vi8zbFBQMHk3ZVoxMytBcXJseVUKY1FidVNKd1JSaHlFUWI2Ym5UQzN0Sk53bS9SOHJDWG1WVjNFdE85QzdOejNVdnlaUjNKR21uN2ZOdGlpL2oxcgpjUU56aW55UmlhYmtWYmZhNUlrSkUzYnROWXFpaW1XTTJZWWxUaEI4NUQyVU5ZRGlvK2RnMUFxQ3N1cEp1bDA1CjlKU3hBb0dBTlNQK28rdE94Q2lBc3lqTnROVHVyRExxMzhNaG54ZDA4U1hDOFlzQVdyUGJnSEtJdmkrUHYxMFYKQkloV0hRQ3RDbW9HT0lYZGF6ZUx1RXVtK2FERytYQm5rN2xHbDhZR3h6RGNUUVFqQThYdk9NeVFaaWJQUnU3aQpPeXJiWVArd2x6ZE1NQ0ZEaGNNWWFpOVAyVDJ3cDY1bDFFMmZoNFVLR3pqN0ZOSEo3dWM9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  cilium-endpoint-gc-interval: "5m0s"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/policy/intro/#policy-enforcement-modes
  enable-policy: "default"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: 5s

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0) of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  # bpf-lb-bypass-fib-lookup instructs Cilium to enable the FIB lookup bypass
  # optimization for nodeport reverse NAT handling.
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: ""

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: vxlan
  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-bandwidth-manager: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement:  "disabled"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-session-affinity: "true"
  enable-l2-neigh-discovery: "true"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path:  "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  cluster-pool-ipv4-cidr: "10.244.0.0/16"
  cluster-pool-ipv4-mask-size: "24"
  disable-cnp-status-updates: "true"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    peer-service: unix:///var/run/cilium/hubble.sock
    listen-address: :4245
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-envoy
  namespace: kube-system
data:
  
  envoy.yaml: |
    static_resources:
      listeners:
        - name: listener_hubble_ui
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 8081
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    codec_type: auto
                    stat_prefix: ingress_http
                    route_config:
                      name: local_route
                      virtual_hosts:
                        - name: local_service
                          domains: ["*"]
                          routes:
                            - match:
                                prefix: "/api/"
                              route:
                                cluster: backend
                                prefix_rewrite: "/"
                                timeout: 0s
                                max_stream_duration:
                                  grpc_timeout_header_max: 0s
                            - match:
                                prefix: "/"
                              route:
                                cluster: frontend
                          cors:
                            allow_origin_string_match:
                              - prefix: "*"
                            allow_methods: GET, PUT, DELETE, POST, OPTIONS
                            allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                            max_age: "1728000"
                            expose_headers: grpc-status,grpc-message
                    http_filters:
                      - name: envoy.filters.http.grpc_web
                      - name: envoy.filters.http.cors
                      - name: envoy.filters.http.router
      clusters:
        - name: frontend
          connect_timeout: 0.25s
          type: strict_dns
          lb_policy: round_robin
          load_assignment:
            cluster_name: frontend
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: 127.0.0.1
                          port_value: 8080
        - name: backend
          connect_timeout: 0.25s
          type: logical_dns
          lb_policy: round_robin
          http2_protocol_options: {}
          load_assignment:
            cluster_name: backend
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: 127.0.0.1
                          port_value: 8090
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - nodes
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  - pods/finalizers
  verbs:
  - get
  - list
  - watch
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  # Deprecated for removal in v1.10
  - create
  - list
  - watch
  - update

  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumnetworkpolicies/finalizers
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/finalizers
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumendpoints/finalizers
  - ciliumnodes
  - ciliumnodes/status
  - ciliumnodes/finalizers
  - ciliumidentities
  - ciliumidentities/finalizers
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumlocalredirectpolicies/finalizers
  - ciliumegressnatpolicies
  - ciliumendpointslices
  verbs:
  - '*'
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumnetworkpolicies/finalizers
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/finalizers
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumendpoints/finalizers
  - ciliumnodes
  - ciliumnodes/status
  - ciliumnodes/finalizers
  - ciliumidentities
  - ciliumendpointslices
  - ciliumidentities/status
  - ciliumidentities/finalizers
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumlocalredirectpolicies/finalizers
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - update
  - watch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
spec:
  type: ClusterIP
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
spec:
  type: ClusterIP
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/cilium-configmap-checksum: "180098703db4697f39e937413f2f202d15ca6c88e77953e8cf996e69d4b6a0e0"
        # This annotation plus the CriticalAddonsOnly toleration makes
        # cilium to be a critical pod in the cluster, which ensures cilium
        # gets priority scheduling.
        # https://kubernetes.io/docs/tasks/administer-cluster/guaranteed-scheduling-critical-addon-pods/
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        k8s-app: cilium
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
            - matchExpressions:
              - key: beta.kubernetes.io/os
                operator: In
                values:
                - linux
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - cilium
            topologyKey: kubernetes.io/hostname
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.11.1@sha256:251ff274acf22fd2067b29a31e9fda94253d2961c061577203621583d7e85bd2"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        lifecycle:
          postStart:
            exec:
              command:
              - "/cni-install.sh"
              - "--enable-debug=false"
              - "--cni-exclusive=true"
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: cni-path
          mountPath: /host/opt/cni/bin
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
      hostNetwork: true
      initContainers:
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.11.1@sha256:251ff274acf22fd2067b29a31e9fda94253d2961c061577203621583d7e85bd2"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        securityContext:
          privileged: true
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.11.1@sha256:251ff274acf22fd2067b29a31e9fda94253d2961c061577203621583d7e85bd2"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      terminationGracePeriodSeconds: 1
      tolerations:
        - operator: Exists
      volumes:
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          secretName: cilium-clustermesh
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          optional: true
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/cilium-configmap-checksum: "180098703db4697f39e937413f2f202d15ca6c88e77953e8cf996e69d4b6a0e0"
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: io.cilium/app
                operator: In
                values:
                - operator
            topologyKey: kubernetes.io/hostname
      containers:
      - name: cilium-operator
        image: quay.io/cilium/operator-generic:v1.11.1@sha256:977240a4783c7be821e215ead515da3093a10f4a7baea9f803511a2c2b44a235
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: "k8s-app"
                  operator: In
                  values:
                    - cilium
            topologyKey: "kubernetes.io/hostname"
      containers:
        - name: hubble-relay
          image: "quay.io/cilium/hubble-relay:v1.11.1@sha256:23d40b2a87a5bf94e0365bd9606721c96f78b8304b61725dca45a0b8a6048203"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: hubble-sock-dir
            mountPath: /var/run/cilium
            readOnly: true
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 0
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: hubble-sock-dir
        hostPath:
          path: /var/run/cilium
          type: Directory
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: ca.crt
                  path: hubble-server-ca.crt
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
spec:
  replicas: 2
  selector:
    matchLabels:
      k8s-app: hubble-ui
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/hubble-ui-envoy-configmap-checksum: "0eda85aa70a7980601c8e106bc87ba013750302f87244f973da529da0d0cd8d0"
      labels:
        k8s-app: hubble-ui
    spec:
      securityContext:
        runAsUser: 1001
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.8.5@sha256:4eaca1ec1741043cfba6066a165b3bf251590cf4ac66371c4f63fbed2224ebb4"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8080
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.8.5@sha256:2bce50cf6c32719d072706f7ceccad654bfa907b2745a496da99610776fe31ed"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
      - name: proxy
        image: "docker.io/envoyproxy/envoy:v1.18.4@sha256:e5c2bb2870d0e59ce917a5100311813b4ede96ce4eb0c6bfa879e3fbe3e83935"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        command: [envoy]
        args:
        - -c
        - /etc/envoy.yaml
        - -l
        - info
        volumeMounts:
        - name: hubble-ui-envoy-yaml
          mountPath: /etc/envoy.yaml
          subPath: envoy.yaml
      volumes:
      - name: hubble-ui-envoy-yaml
        configMap:
          name: hubble-ui-envoy
