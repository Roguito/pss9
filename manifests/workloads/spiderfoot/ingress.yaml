---
apiVersion: v1
kind: Service
metadata:
  name: spiderfoot-danmanners-extname
  annotations:
    external-dns.alpha.kubernetes.io/hostname: spiderfoot.danmanners.com
    external-dns.alpha.kubernetes.io/ttl: "300"
  labels:
    app.kubernetes.io/instance: spiderfoot
spec:
  type: ExternalName
  externalName: kube.danmanners.com
  sessionAffinity: None
---
apiVersion: v1
kind: Service
metadata:
  name: spiderfoot
  labels:
    run: spiderfoot
spec:
  type: ClusterIP
  ports:
  - name: web
    port: 5001
    protocol: TCP
  selector:
    run: spiderfoot
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: spiderfoot-danmanners-cert
spec:
  commonName: spiderfoot.danmanners.com
  secretName: spiderfoot-danmanners-cert
  dnsNames:
    - spiderfoot.danmanners.com
  issuerRef:
    name: acme-prod
    kind: ClusterIssuer
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: spiderfoot-danmanners-cert-web
spec:
  entryPoints:
    - web
  routes:
    - match: Host(`spiderfoot.danmanners.com`)
      kind: Rule
      services:
        - name: spiderfoot
          port: 5001
      middlewares:
        - name: http-https-redirectscheme
          namespace: kube-system
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: spiderfoot-danmanners-cert-websecure
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`spiderfoot.danmanners.com`)
      kind: Rule
      services:
        - name: spiderfoot
          port: 5001
      middlewares:
        - name: spiderfoot-auth
  tls:
    secretName: spiderfoot-danmanners-cert
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: spiderfoot-auth
spec:
  basicAuth:
    secret: spiderfoot-authsecret
---
apiVersion: v1
kind: Secret
metadata:
  name: spiderfoot-authsecret
stringData:
  users: |
    danmanners:$apr1$uf.IDWvx$1zKer5vUBnH6goCRcqbSs1
    sinc:$apr1$DP4fmx2j$Q9/FWddFQy2SFR8fOjLSX1